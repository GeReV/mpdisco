{
  "name": "mpd",
  "version": "1.0.1",
  "description": "music player daemon client",
  "main": "index.js",
  "engines": {
    "node": ">=0.8.0"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:superjoe30/mpd.js.git"
  },
  "keywords": [
    "mpd",
    "music",
    "player",
    "daemon",
    "client",
    "protocol"
  ],
  "author": {
    "name": "Andrew Kelley",
    "email": "superjoe30@gmail.com"
  },
  "license": "BSD",
  "readme": "# node mpd client\n\nConnect to a [music player daemon](http://musicpd.org) server, send commands,\nemit events.\n\n## Usage\n\n```js\nvar mpd = require('mpd'),\n    cmd = mpd.cmd\nvar client = mpd.connect({\n  port: 6600,\n  host: 'localhost',\n});\nclient.on('ready', function() {\n  console.log(\"ready\");\n});\nclient.on('system', function(name) {\n  console.log(\"update\", name);\n});\nclient.on('system-player', function() {\n  client.sendCommand(cmd(\"status\", []), function(err, msg) {\n    if (err) throw err;\n    console.log(msg);\n  });\n});\n```\n\n## Documentation\n\n### Functions\n\n#### mpd.cmd(name, args)\n\nConvert name/args pair into a Command.\n\n#### mpd.connect(options)\n\nConnects and returns a client.\n\n#### client.sendCommand(command, callback)\n\n`command` can be a `MpdClient.Command` or a string.\n\n#### client.sendCommands(commandList, callback)\n\n### Events\n\n#### error(err)\n\n#### end\n\nThe connection is closed.\n\n#### connect\n\nA socket connection has been made.\n\n#### ready\n\nThe mpd server is ready to accept commands.\n\n#### system(systemName)\n\nA system has updated. `systemName` is one of:\n\n  * `database` - the song database has been modified after update.\n  * `update` - a database update has started or finished. If the database was\n    modified during the update, the database event is also emitted.\n  * `stored_playlist` - a stored playlist has been modified, renamed, created\n    or deleted\n  * `playlist` - the current playlist has been modified\n  * `player` - the player has been started, stopped or seeked\n  * `mixer` - the volume has been changed\n  * `output` - an audio output has been enabled or disabled\n  * `options` - options like repeat, random, crossfade, replay gain\n  * `sticker` - the sticker database has been modified.\n  * `subscription` - a client has subscribed or unsubscribed to a channel\n  * `message` - a message was received on a channel this client is subscribed\n    to; this event is only emitted when the queue is empty\n\n#### system-*\n\nSee above event. Each system name has its own event as well.\n",
  "readmeFilename": "README.md",
  "_id": "mpd@1.0.1",
  "dist": {
    "shasum": "11066d0278914f1b1875423e48b4f5d70d5780c4"
  },
  "_from": "mpd@",
  "_resolved": "https://registry.npmjs.org/mpd/-/mpd-1.0.1.tgz"
}
