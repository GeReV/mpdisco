{
  "name": "handlebars-precompiler",
  "description": "Handlebars precompiler node module",
  "version": "1.0.2",
  "homepage": "http://github.com/jwietelmann/node-handlebars-precompiler",
  "keywords": [
    "handlebars mustache template html compiler"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jwietelmann/node-handlebars-precompiler.git"
  },
  "engines": {
    "node": ">=0.4.7"
  },
  "dependencies": {
    "handlebars": "~1.0",
    "uglify-js": "~1.2",
    "file": "~0.2"
  },
  "devDependencies": {},
  "main": "handlebars-precompiler.js",
  "readme": "# Death to Redundant View Templates!\n\nGet the package: ```npm install handlebars-precompiler```\n\nThis is how you might use it in an Express project:\n\n```javascript\napp.configure('development', function(){\n  hbsPrecompiler = require('handlebars-precompiler');\n  hbsPrecompiler.watchDir(\n    __dirname + \"/views\",\n    __dirname + \"/public/javascripts/templates.js\",\n    ['handlebars', 'hbs']\n  );\n});\n```\n\nIn this example, we watch for changes to ```*.handlebars``` and ```*.hbs``` files in our views directory.\nWhen changes are made, precompilation is run on all Handlebars templates and exported to a single minified\nJavascript file.\n\nOn the browser side, you will need to deploy the Handlebars runtime-only release.\nYou could use the full release which includes a compiler, but your site will be faster if you don't.\n\nClient-side versions of the templates will be named and stored in the ```Handlebars``` object according to their file paths,\ne.g. ```Handlebars.templates['users/show']```",
  "readmeFilename": "README.mkdn",
  "_id": "handlebars-precompiler@1.0.2",
  "dist": {
    "shasum": "058667b3588354a998805b4b6702f169390bf680"
  },
  "_from": "handlebars-precompiler@1.0.x",
  "_resolved": "https://registry.npmjs.org/handlebars-precompiler/-/handlebars-precompiler-1.0.2.tgz"
}
